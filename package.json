{
  "name": "sorting-algorithms",
  "version": "1.0.0",
  "description": "This module is made to be used to perform Sorting Algorithms of almost all types without doing any calculation or performing any calculation of code. This module includes these algorithms i.e., (Selection Sort, Bubble Sort, Insertion Sort, Merge Sort, Quick Sort, Heap Sort, Counting Sort, Radix Sort, Bucket Sort, Bingo Sort, AlgorithmShellSort, TimSort, Comb Sort, Pigeonhole Sort, Cycle Sort, Cocktail Sort, Strand Sort, Bitonic Sort, Pancake sorting, BogoSort or Permutation Sort, Gnome Sort, Sleep Sort – The King of LazinessStructure Sorting in C++Stoog,e SortTag Sort (To get both sorted and original)Tree, SortOdd-Even Sort / Brick, Sort3-way, Merge Sort)",
  "main": "index.js",
  "scripts": {
    "test": "npm run test"
  },
  "keywords": [
    "Selection",
    "Sort",
    "Bubble",
    "Sort",
    "Insertion",
    "Sort",
    "Merge",
    "Sort",
    "Quick",
    "Sort",
    "Heap",
    "Sort",
    "Counting",
    "Sort",
    "Radix",
    "Sort",
    "Bucket",
    "Sort",
    "Bingo",
    "Sort",
    "AlgorithmShellSort",
    "TimSort",
    "Comb",
    "Sort",
    "Pigeonhole",
    "Sort",
    "Cycle",
    "Sort",
    "Cocktail",
    "Sort",
    "Strand",
    "Sort",
    "Bitonic",
    "Sort",
    "Pancake",
    "sorting",
    "BogoSort",
    "or",
    "Permutation",
    "Sort",
    "Gnome",
    "Sort",
    "Sleep",
    "Sort",
    "–",
    "The",
    "King",
    "of",
    "LazinessStructure",
    "Sorting",
    "in",
    "C++Stoog",
    "e",
    "SortTag",
    "Sort",
    "(To",
    "get",
    "both",
    "sorted",
    "and",
    "original)Tree",
    "SortOdd-Even",
    "Sort",
    "/",
    "Brick",
    "Sort3-way",
    "Merge",
    "Sort"
  ],
  "author": "M-IrtazaGhaffar (ittiDevelops)",
  "license": "ISC"
}
